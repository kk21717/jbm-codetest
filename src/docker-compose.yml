version: '3.4'

services:

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
        - "5672:5672"
        - "15672:15672"


  sqldb:
    image: mcr.microsoft.com/mssql/server:2017-latest
    container_name: sqldb
    environment:
        SA_PASSWORD: "123"
        ACCEPT_EULA: "Y"
    restart: always
    ports:
        - "1433:1433"


  auth-api-service:
    container_name: auth-api-service
    build: ./Auth.Service/Controller.Http.Rest/
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "ConnectionStrings:OrderingConnectionString"="Server=sqldb;User Id=sa;Password=123;Database=jbm-auth"
        - "RabbitEventBusOptions:HostAddress=amqp://guest:guest@rabbitmq:5672"
        - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
        - sqldb
        - rabbitmq
        - elasticsearch
    ports:
        - "8020:80"

        
  user-api-service:
    container_name: user-api-service
    build: ./User.Service/Controller.Http.Rest/
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "ConnectionStrings:OrderingConnectionString"="Server=sqldb;User Id=sa;Password=123;Database=jbm-user"
        - "RabbitEventBusOptions:HostAddress=amqp://guest:guest@rabbitmq:5672"
        - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
        - sqldb
        - rabbitmq
        - elasticsearch
    ports:
        - "8030:80"
        
  user-worker-service:
    container_name: user-worker-service
    build: ./User.Service/Controller.Worker/
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "ConnectionStrings:OrderingConnectionString"="Server=sqldb;User Id=sa;Password=123;Database=jbm-user"
        - "RabbitEventBusOptions:HostAddress=amqp://guest:guest@rabbitmq:5672"
        - "WorkerOptions:RegularActionIntervalMilliSeconds"=1000
        - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
        - sqldb
        - rabbitmq
        - elasticsearch
  

  aggregator-api-service:
    container_name: aggregator-api-service
    build: ./Aggregator.Service/Controller.Http.Rest/
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "ExternalResourcesOptions:UserAccounts_ResourceUrl"="http://user-api-service:8020/auth-api/accounts/{userId}"
        - "ExternalResourcesOptions:UserProfiles_ResourceUrl"="http://auth-api-service:8030/user-api/profiles/{userId}"
        - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
        - user-api-service
        - auth-api-service
        - elasticsearch
    ports:
        - "8040:80"      


  gateway-api-service:
    container_name: gateway-api-service
    build: ./ApiGateway/OcelotApiGateway/
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
        - auth-api-service
        - user-api-service
        - aggregator-api-service        
        - elasticsearch
    ports:
        - "8050:80"                  


  # redis:
    # image: redis
    # container_name: jbt-redis
    # restart: unless-stopped
    # ports:
      # - '6379:6379'
    # command: redis-server --save 20 1 --loglevel warning 
    # volumes: 
      # - /redis/data:/data
      # - /redis/conf:/usr/local/etc/redis
  

 elasticsearch:
    container_name: elasticsearch
    environment:
        - xpack.monitoring.enabled=true
        - xpack.watcher.enabled=false
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - discovery.type=single-node
    ports:
        - "9200:9200"
    volumes:
        - elasticsearch-data:/usr/share/elasticsearch/data   


  kibana:
    container_name: kibana
    environment:        
        - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
        - elasticsearch
    ports:
        - "5601:5601"  
        
